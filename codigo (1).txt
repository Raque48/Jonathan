--Crear un procedimiento que inserte datos a la tabla departments.--
--1.1- CREAR UN PROCEDIMIENTO --

CREATE OR REPlACE PROCEDURE insertadepartamentos
(a in departments.department_id%type, 
b in departments.department_name%type, 
c in departments.manager_id%type, 
d in  departments.location_id%type)
is 
begin
insert into departments values  (a,b,c,d);
end insertadepartamentos;

--1.2- EJECUTAR EL PROCEDIMIENTO --
EXECUTE insertadepartamentos (111,'Informática', 200, 1500)
EXECUTE insertadepartamentos (112,'Desarrollo', 200, 1500)
EXECUTE insertadepartamentos (113,'Administración', 200, 1500)

select * from DEPARTMENTS

--2.1- Crear un procedimiento que inserte datos a la tabla employees.--
create or replace procedure AltaNuevoEmpleado
( e in EMPLOYEES.EMPLOYEE_ID%type,
  f in EMPLOYEES.FIRST_NAME%type,
  g in EMPLOYEES.LAST_NAME%type,
  h in EMPLOYEES.EMAIL%TYPE,
  i in EMPLOYEES.PHONE_NUMBER%TYPE,
  j in EMPLOYEES.HIRE_DATE%TYPE,
  l in EMPLOYEES.JOB_ID%TYPE,
  m in EMPLOYEES.SALARY%TYPE,
  n in EMPLOYEES.COMMISSION_PCT%TYPE,
  o in EMPLOYEES.MANAGER_ID%TYPE,
  p in EMPLOYEES.DEPARTMENT_ID%TYPE)
  IS
  BEGIN
  INSERT INTO EMPLOYEES VALUES(e,f,g,h,i,j,l,m,n,o,p);
  end AltaNuevoEmpleado;
--.2.1- EJECUTA EL PROCEDIMIENTO--
EXECUTE AltaNuevoEmpleado (1,'Brandon','Cortés','BRANDON',5556738066,'11/JAN/22','AC_MGR',20000,0,100,90)

SELECT* FROM EMPLOYEES
--3.1- Crear un procedimiento que elimine un registro de la tabla departments --
CREATE OR REPLACE PROCEDURE eliminadepartamentos
(x  IN departments.department_id%type) 
is 
begin 
delete 
from  departments
where  department_id=x;
end eliminadepartamentos;

--3.2 EJECUTA EL PROCEDIMIENTO--
EXECUTE ELIMINADEPARTAMENTOS( 113)
SELECT * FROM DEPARTMENTS


--4.1 Crear un procedimiento que actualice (UPDATE)un 5% el salario de los empleados--
CREATE OR REPLACE PROCEDURE actualizasalcinco
(z  IN employees.employee_id%type) 
is 
begin 
update employees
set salary=salary*1.05      
where  employee_id=z;
end actualizasalcinco;  

--4.2 EJECUTAR PROCEDIMIENTO--
EXECUTE actualizasalcinco (100)
EXECUTE actualizasalcinco (101)
EXECUTE actualizasalcinco (102)
SELECT * FROM EMPLOYEES
--PRACTICA 7--

--1.1-Crear un procedimiento de consulta que muestre nombre del puesto y salario mínimo teniendo comoparámetro de entrada clave de puesto.--
CREATE OR REPLACE PROCEDURE CONSULTAJOBS
(A IN JOBS.JOB_ID%TYPE,
B OUT JOBS.JOB_TITLE%TYPE,
C OUT JOBS.MIN_SALARY%TYPE)
IS
BEGIN
SELECT JOB_TITLE, MIN_SALARY
INTO B, C
FROM JOBS
WHERE JOB_ID=A;
END CONSULTAJOBS;

--1.2--CREAR VARIABLES DE SALIDA--
VARIABLE PUESTO VARCHAR2(80)
VARIABLE SALARIOMIN NUMBER

-1.3-- EJECUTA PROCEDIMIENTO--
EXECUTE CONSULTAJOBS ('AD_PRES',:puesto,:salariomin)

-1.4--IMPRIMIR VARIABLES DE SALIDA--
PRINT PUESTO
PRINT SALARIOMIN


SELECT * FROM JOBS

//HACER LA DIAPOSITIVA 12 Y LOS EJERCIOCIOS 6 Y 7//
--Crear un procedimiento que inserte datos a la tabla departments.--
--2.1- CREAR UN PROCEDIMIENTO --

CREATE OR REPlACE PROCEDURE insertDepa
(r in JOBS.JOB_ID%type, 
s in JOBS.JOB_TITLE%type, 
t in JOBS.MIN_SALARY%type, 
u in JOBS.MAX_SALARY%type)
is 
begin
insert into departments values  (r,s,t,u);
end insertDepa;

--2.2- EJECUTAR EL PROCEDIMIENTO --
EXECUTE insertDepa ('ASS_GE','Asistente general', 20000, 40000)
EXECUTE insertDepa ('LIMP','Limpieza', 15000, 30000)
EXECUTE insertDepa ('GODI','Godin', 8000, 1000)

select * from JOBS
--crear procedimiento que elimine un procedimiento de la tabla JOBS--

--4.-  CREAR UN PROCEDIMIENTO QUE CONSULTE DATOS DE LA TABLA EMPLEADOS TENIENDO COMO PARAMETRO DE ENTRADA EMPLOYEE_ID Y COMO PARAMETROS DE SALIDA NOMBRE DEL EMPLEADO, APELLIDO, SALARIO Y DEPARTAMENTO.--